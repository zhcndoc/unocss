import{_ as i,i as a,o as n,at as t}from"./chunks/framework.YwE0kBUe.js";const c=JSON.parse('{"title":"预处理","description":"你可以从配置中注入原始 CSS 作为预处理。已解析的主题可用于自定义 CSS。","frontmatter":{"title":"预处理","description":"你可以从配置中注入原始 CSS 作为预处理。已解析的主题可用于自定义 CSS。"},"headers":[],"relativePath":"config/preflights.md","filePath":"config/preflights.md","lastUpdated":1757738446000}'),h={name:"config/preflights.md"};function l(p,s,e,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="预处理" tabindex="-1">预处理 <a class="header-anchor" href="#预处理" aria-label="Permalink to &quot;预处理&quot;">​</a></h1><p>你可以从配置中注入原始 CSS 作为预处理。已解析的 <code>theme</code> 可用于自定义 CSS。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">preflights</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    getCSS</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: ({ </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">theme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }) =&gt; </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">\`</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">      * {</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        color: </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">theme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">gray</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">?.[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">700</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ??</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">#333</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        padding: 0;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        margin: 0;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">      }</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    \`</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre></div>`,3)]))}const o=i(h,[["render",l]]);export{c as __pageData,o as default};
