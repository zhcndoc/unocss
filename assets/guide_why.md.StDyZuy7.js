import{_ as e,i as t,o as i,at as r}from"./chunks/framework.YwE0kBUe.js";const p=JSON.parse('{"title":"为什么选择 UnoCSS？","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/why.md","filePath":"guide/why.md","lastUpdated":1757738446000}'),n={name:"guide/why.md"};function s(S,a,o,l,h,d){return i(),t("div",null,a[0]||(a[0]=[r('<h1 id="为什么选择-unocss" tabindex="-1">为什么选择 UnoCSS？ <a class="header-anchor" href="#为什么选择-unocss" aria-label="Permalink to &quot;为什么选择 UnoCSS？&quot;">​</a></h1><h2 id="动机" tabindex="-1">动机 <a class="header-anchor" href="#动机" aria-label="Permalink to &quot;动机&quot;">​</a></h2><p>我们建议您阅读由 UnoCSS 的创建者 <a href="https://antfu.me/" target="_blank" rel="noreferrer">Anthony Fu</a> 撰写的博客文章 <a href="https://antfu.me/posts/reimagine-atomic-css" target="_blank" rel="noreferrer">重新构想原子 CSS</a>，以更好地理解 UnoCSS 背后的动机。</p><h2 id="unocss-与-x-的不同之处" tabindex="-1">UnoCSS 与 X 的不同之处 <a class="header-anchor" href="#unocss-与-x-的不同之处" aria-label="Permalink to &quot;UnoCSS 与 X 的不同之处&quot;">​</a></h2><h3 id="windi-css" tabindex="-1">Windi CSS <a class="header-anchor" href="#windi-css" aria-label="Permalink to &quot;Windi CSS&quot;">​</a></h3><p>UnoCSS 是由 <a href="https://windicss.org/" target="_blank" rel="noreferrer">Windi CSS</a> 的一位团队成员发起的，许多灵感来自于我们在 Windi CSS 中所做的工作。尽管 Windi CSS 在 2023 年 3 月之后不再积极维护，但您可以将 UnoCSS 视为 Windi CSS 的 <em>“精神继承者”</em>。</p><p>UnoCSS 继承了 Windi CSS 的按需特性、<a href="/presets/attributify.html">属性化模式</a>、<a href="/config/shortcuts.html">快捷方式</a>、<a href="/transformers/variant-group.html">变体组</a>、<a href="/transformers/compile-class.html">编译模式</a>等诸多功能。更重要的是，UnoCSS 从头开始构建，最大限度地考虑了可扩展性和性能，使我们能够引入新的功能，如 <a href="/presets/icons.html">纯 CSS 图标</a>、<a href="/presets/attributify.html#valueless-attributify">无值属性化</a>、<a href="/presets/tagify.html">标签化</a>、<a href="/presets/web-fonts.html">网页字体</a> 等等。</p><p>最重要的是，UnoCSS 被提取为一个原子 CSS 引擎，所有功能都是可选的，可以轻松创建您自己的约定、自己的设计系统和自己的预设 - 结合您想要的功能。</p><h3 id="tailwind-css" tabindex="-1">Tailwind CSS <a class="header-anchor" href="#tailwind-css" aria-label="Permalink to &quot;Tailwind CSS&quot;">​</a></h3><p>Windi CSS 和 UnoCSS 均受到 <a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">Tailwind CSS</a> 的启发。由于 UnoCSS 从头开始构建，我们能够很好地概述原子 CSS 如何通过先前的艺术进行设计并抽象成优雅而强大的 API。由于设计目标的不同，很难与 Tailwind CSS 进行直接比较。但我们会尝试列出一些不同之处。</p><p>Tailwind CSS 是一个 PostCSS 插件，而 UnoCSS 是一个具有一系列一流集成的同构引擎（包括 <a href="/integrations/postcss.html">PostCSS 插件</a>）。这意味着 UnoCSS 在不同地方使用时灵活性更高（例如，<a href="/integrations/runtime.html">CDN 运行时</a>，可以动态生成 CSS）并与构建工具深度集成，以提供更好的 HMR、性能和开发者体验（例如，<a href="/tools/inspector.html">检查器</a>）。</p><p>抛开技术权衡不谈，UnoCSS 也被设计为完全可扩展和可定制，而 Tailwind CSS 更加规范。基于 Tailwind CSS 构建自定义设计系统（或设计令牌）可能比较困难，您无法真正脱离 Tailwind CSS 的约定。而使用 UnoCSS，您几乎可以用完全的控制构建任何您想要的东西。例如，我们在 <a href="/presets/wind3.html">一个单一预设</a> 中实现了整个 Tailwind CSS 兼容的实用工具，并且还有许多采用其他有趣理念的 <a href="/presets/community.html">优秀社区预设</a>。</p><p>得益于 UnoCSS 提供的灵活性，我们能够在其基础上实验许多创新功能，例如：</p><ul><li><a href="/presets/icons.html">纯 CSS 图标</a></li><li><a href="/presets/attributify.html">属性化模式</a></li><li><a href="/transformers/variant-group.html">变体组</a></li><li><a href="/config/shortcuts.html">快捷方式</a></li><li><a href="/presets/tagify.html">标签化</a></li><li><a href="/presets/web-fonts.html">网页字体</a></li><li><a href="/integrations/runtime.html">CDN 运行时</a></li><li><a href="/tools/inspector.html">检查器</a></li></ul><p>由于与 Tailwind CSS 的设计目标不同，UnoCSS 不支持 Tailwind CSS 的插件系统或配置，这意味着从一个 heavily customized 的 Tailwind CSS 项目迁移可能会更加困难。这是为了使 UnoCSS 在性能和可扩展性上达到高标准而做出的有意决策，我们相信这个权衡是值得的。</p>',15)]))}const C=e(n,[["render",s]]);export{p as __pageData,C as default};
